{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","App.js","index.js"],"names":["Square","value","onClick","className","Board","row","col","squares","style","borderRadius","margin","height","width","display","gridTemplate","map","square","i","Game","useState","setHeight","setWidth","combination","setCombination","Array","fill","board","setBoard","xIsNext","setXisNext","play","setPlay","onSubmit","e","preventDefault","type","max","min","onChange","target","boardCopy","console","log","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAQeA,EANA,SAAC,GAAD,IAAIC,EAAJ,EAAIA,MAAOC,EAAX,EAAWA,QAAX,OACX,wBAASC,UAAU,aAAaD,QAASA,EAAzC,SACKD,KCmBMG,EAnBD,SAAC,GAAD,IAAIC,EAAJ,EAAIA,IAAKC,EAAT,EAASA,IAAKC,EAAd,EAAcA,QAASL,EAAvB,EAAuBA,QAAvB,OACV,qBAAMM,MAAS,CACXC,aAAc,OACdC,OAAQ,SACRC,OAAQ,QACRC,MAAO,QACPC,QAAS,OACTC,aAAa,UAAD,OAAYR,EAAZ,2BAAkCD,EAAlC,WANhB,SAQKE,EAAQQ,KAAI,SAACC,EAAQC,GAAT,OACT,cAAC,EAAD,CAEIhB,MAAOe,EACPd,QAAS,kBAAMA,EAAQe,KAFlBA,SCsFNC,EAhGF,WAAO,IAAD,EAEaC,mBAAS,GAFtB,mBAERR,EAFQ,KAEAS,EAFA,OAGWD,mBAAS,GAHpB,mBAGRP,EAHQ,KAGDS,EAHC,OAIuBF,mBAAS,GAJhC,mBAIRG,EAJQ,KAIKC,EAJL,OAKWJ,oBAAS,kBAAK,IAAIK,MAAMb,EAASC,GAAOa,KAAK,SALxD,mBAKRC,EALQ,KAKDC,EALC,OAMeR,oBAAS,GANxB,mBAMRS,EANQ,KAMCC,EAND,OAOSV,oBAAS,GAPlB,mBAORW,EAPQ,KAOFC,EAPE,KAoCf,OACI,qCACC,sBAAK5B,UAAU,WAAf,UACG,oBAAIA,UAAU,aAAd,yBACA,oBAAIA,UAAU,cAAd,qCAEA,yBAASA,UAAU,eAAnB,SACK,uBAAM6B,SAtBF,SAACC,GACdA,EAAEC,iBACFH,GAAQ,GACRJ,GAAS,kBAAM,IAAIH,MAAMb,EAASC,GAAOa,KAAK,UAmBrC,UACG,2CACE,uBACGU,KAAK,SACLlC,MAAOU,EACPyB,IAAK,GACLC,IAAK,EACLC,SAAU,SAACL,GAAD,OAAOb,EAAUa,EAAEM,OAAOtC,aAI1C,0CACG,uBACGkC,KAAK,SACLC,IAAK,GACLC,IAAK,EACLpC,MAAOW,EACP0B,SAAU,SAACL,GAAD,OAAOZ,EAASY,EAAEM,OAAOtC,aAIzC,wDACM,uBACIkC,KAAK,SACLC,IAAK,GACLC,IAAK,EACLpC,MAAOqB,EACPgB,SAAU,SAACL,GAAD,OAAOV,EAAeU,EAAEM,OAAOtC,aAGlD,wBAAQkC,KAAK,SAAb,kCAITL,GACC,qCACE,qBAAK3B,UAAU,SAAf,SACI,4BAnDH,iBAAmByB,EAAU,IAAM,SAqDpC,cAAC,EAAD,CACGrB,QAASmB,EACTxB,QAzEW,SAAAe,GACpB,IAAMuB,EAAS,YAAOd,GACD,MAAlBc,EAAUvB,IAAiC,MAAlBuB,EAAUvB,KACtCuB,EAAUvB,GAAKW,EAAU,IAAM,IAC/BD,EAASa,GACTX,GAAYD,GACZa,QAAQC,IAAI,SAAUF,EAAUvB,MAoEvBX,IAAKK,EACLN,IAAKO,EACLkB,KAAMA,WClFRa,MANf,WACE,OACG,cAAC,EAAD,KCDLC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.92030daa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Square = ({  value, onClick}) => (\r\n    <button  className=' btnsquare' onClick={onClick}>\r\n        {value}\r\n    </button>\r\n)\r\n\r\nexport default Square\r\n","import React from 'react'\r\nimport Square from './Square'\r\n\r\n\r\nconst Board = ({  row, col, squares, onClick}) => (\r\n    <div  style = {{\r\n        borderRadius: '10px',\r\n        margin: '0 auto',\r\n        height: '400px',\r\n        width: '400px',\r\n        display: 'grid',\r\n        gridTemplate: `repeat(${col}, 1fr) / repeat(${row}, 1fr)`\r\n    }} >\r\n        {squares.map((square, i) => (\r\n            <Square  \r\n                key={i} \r\n                value={square} \r\n                onClick={() => onClick(i)}\r\n           />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default Board\r\n","import React, { useState } from 'react'\r\nimport Board from './Board'\r\n\r\n\r\n\r\nconst Game = () => {\r\n\r\n    const [height, setHeight] = useState(3)\r\n    const [width, setWidth] = useState(3)\r\n    const [combination, setCombination] = useState(3)\r\n    const [board, setBoard] = useState(()=> new Array(height * width).fill(null));\r\n    const [xIsNext, setXisNext] = useState(false);\r\n    const [play, setPlay] = useState(false)\r\n   \r\n\r\n    \r\n    const handleCellClick = i => {\r\n        const boardCopy = [...board];\r\n        if(boardCopy[i] ===  'X' || boardCopy[i] ===  'O') return;\r\n        boardCopy[i] = xIsNext ? 'O' : 'X';\r\n        setBoard(boardCopy);\r\n        setXisNext(!xIsNext);\r\n        console.log(\"change\", boardCopy[i])\r\n    }\r\n\r\n    \r\n    const startPlay =(e) => {\r\n        e.preventDefault()\r\n        setPlay(true)\r\n        setBoard(() => new Array(height * width).fill(null))\r\n        \r\n    }\r\n\r\n    const getTitle = () => {\r\n        return 'Next Player  ' + (xIsNext ? 'O' : 'X');\r\n    }\r\n\r\n    \r\n        \r\n    \r\n\r\n    return (\r\n        <>\r\n         <div className='home-box'>\r\n            <h1 className='hom-box-h1'>Tic Tac Toe</h1>\r\n            <h2 className='home-box-h1'>Choose the type of game</h2>\r\n\r\n            <section className='home-section'>\r\n                 <form onSubmit={startPlay}>\r\n                    <label>height\r\n                      <input \r\n                         type='number'\r\n                         value={height} \r\n                         max={10}\r\n                         min={2}\r\n                         onChange={(e) => setHeight(e.target.value)}\r\n                       />\r\n                   </label>\r\n\r\n                   <label>width\r\n                      <input \r\n                         type='number'\r\n                         max={10}\r\n                         min={2}\r\n                         value={width}\r\n                         onChange={(e) => setWidth(e.target.value)}\r\n                      />\r\n                   </label>\r\n\r\n                   <label>Winning combination\r\n                         <input \r\n                             type='number'\r\n                             max={10}\r\n                             min={2}\r\n                             value={combination}\r\n                             onChange={(e) => setCombination(e.target.value)}\r\n                         />\r\n                    </label>\r\n                    <button type='submit'> Start Play </button>\r\n                </form> \r\n            </section>\r\n        </div>\r\n         { play && ( \r\n            <>\r\n              <div className='center' >\r\n                  <p >{getTitle() }</p>\r\n               </div>\r\n              <Board \r\n                 squares={board} \r\n                 onClick={handleCellClick}    \r\n                 col={height } \r\n                 row={width} \r\n                 play={play}\r\n               />\r\n           </>\r\n           )\r\n         }\r\n         </>\r\n    )\r\n}\r\n\r\nexport default Game\r\n","import React from 'react'\nimport './App.css';\nimport Game from './components/Game'\n\nfunction App() {\n  return (\n     <Game/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}